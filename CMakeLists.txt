cmake_minimum_required(VERSION 3.18)

if(NOT DEFINED EDK2_VERSION_MAJOR)
  set(EDK2_VERSION_MAJOR 2020)
endif()
if(NOT DEFINED EDK2_VERSION_MINOR)
  set(EDK2_VERSION_MINOR 0)
endif()
if(NOT DEFINED EDK2_VERSION_PATCH)
  set(EDK2_VERSION_PATCH 0)
endif()

project(EDK2
  VERSION ${EDK2_VERSION_MAJOR}.${EDK2_VERSION_MINOR}.${EDK2_VERSION_PATCH}
  LANGUAGES C)

# Each of them corresponds to edk2-config's.
set(EDK2_TOOLS_BINARY_DIR ${EDK2_RUNTIME_OUTPUT_INTDIR}) # --bindir
set(EDK2_LIBRARY_DIR      ${EDK2_LIBRARY_OUTPUT_INTDIR}) # --libdir
set(EDK2_MAIN_SRC_DIR     ${CMAKE_CURRENT_SOURCE_DIR}  ) # --src-root
set(EDK2_MAIN_INCLUDE_DIR ${EDK2_MAIN_SRC_DIR}/include ) # --includedir
set(EDK2_BINARY_DIR       ${CMAKE_CURRENT_BINARY_DIR}  ) # --prefix
set(EDK2_MDEPKG_DIR       ${EDK2_MAIN_SRC_DIR}/MdePkg)
set(EDK2_MDEPKG_DIR       ${EDK2_MAIN_SRC_DIR}/MdePkg)

message(STATUS "CMAKE_CURRENT_SOURCE_DIR is ${CMAKE_CURRENT_SOURCE_DIR}")
message(STATUS "CMAKE_SOURCE_DIR is ${CMAKE_SOURCE_DIR}")
message(STATUS "EDK2_MAIN_SRC_DIR is ${EDK2_MAIN_SRC_DIR}")
message(STATUS "EDK2_MDEPKG_DIR is ${EDK2_MDEPKG_DIR}")

# Cmake module directory (FindMdePkg.cmake, FindMdeModulePkg.cmake etc.)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}")

message(STATUS "CMAKE_MODULE_PATH is ${CMAKE_MODULE_PATH}")
find_package(MdePkg REQUIRED)

add_subdirectory(${EDK2_MDEPKG_DIR}/Library/PeiPcdLib)
